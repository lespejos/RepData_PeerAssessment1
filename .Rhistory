plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1 ","Sub_metering_2", "Sub_metering_3"), bty="n", lwd=c(1,1), cex=0.4)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1 ","Sub_metering_2", "Sub_metering_3"), bty="n", lwd=c(1,1))
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1 ","Sub_metering_2", "Sub_metering_3"), bty="n", lwd=c(1,1), cex=0.6)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1 ","Sub_metering_2", "Sub_metering_3"), bty="n", lwd=c(1,1), cex=0.3)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1 ","Sub_metering_2", "Sub_metering_3"), bty="n", lwd=c(1,1), cex=0.3)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1 ","Sub_metering_2", "Sub_metering_3"), bty="n", lwd=c(1,1), cex=0.4)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), cex=0.6, )
#save the plot as PNG in the working directory
dev.copy(png, file="Plot3.png", width=480, height=480)
#close the graphic device
dev.off()
datapower <- read.table("household_power_consumption.txt", header=T, sep=";", na.strings = "?")
datapower$Date <- as.Date(datapower$Date, format="%d/%m/%Y")
powercomp <- datapower[(datapower$Date=="2007-02-01") | (datapower$Date=="2007-02-02"),]
powercomp <- transform(powercomp, datetime=as.POSIXct(paste(Date, Time)), "%d/%m/%Y %H:%M:%S")
str(powercomp)
hist(powercomp$Global_active_power, main = "Global Active Power", xlab="Global Active Power (kilowatts)", col="red")
dev.copy(png, file="plot1.png", width=480, height=480)
dev.off()
dev.copy(png, file="Plot1.png", width=480, height=480)
datapower <- read.table("household_power_consumption.txt", header=T, sep=";", na.strings = "?")
datapower$Date <- as.Date(datapower$Date, format="%d/%m/%Y")
powercomp <- datapower[(datapower$Date=="2007-02-01") | (datapower$Date=="2007-02-02"),]
powercomp <- transform(powercomp, datetime=as.POSIXct(paste(Date, Time)), "%d/%m/%Y %H:%M:%S")
str(powercomp)
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power (kilowatts)", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
dev.copy(png, file="Plot2.png", width=480, height=480)
plot(powercomp$datetime, powercomp$Global_active_power, main="Global Active Power", ylab = "Global Active Power (kilowatts)", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power (kilowatts)", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
datapower <- read.table("household_power_consumption.txt", header=T, sep=";", na.strings = "?")
datapower$Date <- as.Date(datapower$Date, format="%d/%m/%Y")
powercomp <- datapower[(datapower$Date=="2007-02-01") | (datapower$Date=="2007-02-02"),]
powercomp <- transform(powercomp, datetime=as.POSIXct(paste(Date, Time)), "%d/%m/%Y %H:%M:%S")
hist(powercomp$Global_active_power, main = "Global Active Power", xlab="Global Active Power (kilowatts)", col="red")
dev.copy(png, file="Plot1.png", width=480, height=480)
dev.off()
datapower <- read.table("household_power_consumption.txt", header=T, sep=";", na.strings = "?")
datapower$Date <- as.Date(datapower$Date, format="%d/%m/%Y")
powercomp <- datapower[(datapower$Date=="2007-02-01") | (datapower$Date=="2007-02-02"),]
powercomp <- transform(powercomp, datetime=as.POSIXct(paste(Date, Time)), "%d/%m/%Y %H:%M:%S")
str(powercomp)
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power (kilowatts)", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
dev.copy(png, file="Plot2.png", width=480, height=480)
dev.off()
datapower <- read.table("household_power_consumption.txt", header=T, sep=";", na.strings = "?")
datapower$Date <- as.Date(datapower$Date, format="%d/%m/%Y")
powercomp <- datapower[(datapower$Date=="2007-02-01") | (datapower$Date=="2007-02-02"),]
powercomp <- transform(powercomp, datetime=as.POSIXct(paste(Date, Time)), "%d/%m/%Y %H:%M:%S")
str(powercomp)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), cex=0.6, )
dev.copy(png, file="Plot3.png", width=480, height=480)
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), bty="n", lwd=c(1,1), cex=0.4)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
dev.copy(png, file="Plot4.png", width=480, height=480)
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), bty="n", lwd=c(1,1), cex=0.35)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), bty="n", cex=0.35)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), bty="n", cex=0.35)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), bty="n", cex=0.3)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), bty="n")
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), bty="n", xjust=0)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), bty="n", cex=0.5, xjust=1)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), bty="n", cex=0.3, xjust=1)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), bty="n", cex=0.3, xjust=0.5)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), bty="n", cex=0.3, y.intersp=0)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), bty="n", cex=0.3, y.intersp=2)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), bty="n", cex=0.3, y.intersp=0.8)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), bty="n", cex=0.5, y.intersp=0.8)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), bty="n", cex=0.5, y.intersp=0.5)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), bty="n", cex=0.5, y.intersp=0.5, xjust=1)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), bty="n", cex=0.5, y.intersp=0.5, xjust=0)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), bty="n", cex=0.5, y.intersp=0.5, xjust=0)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), bty="n", cex=0.5, y.intersp=0.6, xjust=0)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
par(mfrow = c(2, 2))
plot(powercomp$datetime, powercomp$Global_active_power, ylab = "Global Active Power", type="l", xlab="", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime, powercomp$Voltage, type="l", xlab="datetime", ylab="Voltage", cex.lab=0.8, cex.axis=0.8)
plot(powercomp$datetime,powercomp$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering", cex.lab=0.8, cex.axis=0.8)
lines(powercomp$datetime,powercomp$Sub_metering_2,col="red")
lines(powercomp$datetime,powercomp$Sub_metering_3,col="blue")
legend("topright", lty=c(1,1,1), col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), bty="n", cex=0.5, y.intersp=0.8, xjust=0)
plot(powercomp$datetime, powercomp$Global_reactive_power, type="l", xlab="datetime",  ylab="Global_reactive_power", cex.lab=0.8, cex.axis=0.8)
#save the plot as PNG in the working directory
dev.copy(png, file="Plot4.png", width=480, height=480)
#close the graphic device
dev.off()
setwd("~/RepData_PeerAssessment1")
unz("activity", "activity.csv")
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date, "%Y-%m-%d")
str(activity)
missingdata<- is.na(activity$steps)
missingdata
missingdata<- wich(is.na(activity$steps))
missingdata<- which(is.na(activity$steps))
missingdata
medians <- rep(median(activity$steps, na.rm=TRUE), times=length(missingdata))
activity[missingdata, "steps"] <- medians
head(activity)
head(medians)
stepsperday<-tapply(activity$steps, activity$date, FUN=sum)
hist(stepsday,  main = "Frequency of the Total number of stepsa day", xlab = "Steps")
hist(stepsperday,  main = "Frequency of the Total number of stepsa day", xlab = "Steps")
stepsperdaymediansNA<-tapply(activity$steps, activity$date, FUN=sum)
hist(stepsperdaymediansNA,  main = "Frequency of the Total number of stepsa day", xlab = "Steps")
missingdata<- which(is.na(activity$steps))
medians <- rep(median(stepsperday, na.rm=TRUE), times=length(missingdata))
activity[missingdata, "steps"] <- medians
stepsperdaymediansNA<-tapply(activity$steps, activity$date, FUN=sum)
hist(stepsperdaymediansNA,  main = "Frequency of the Total number of stepsa day", xlab = "Steps")
stepsmean1 <- mean(stepsperdaymediansNA, na.rm=TRUE)
stepsmedian1 <- median(stepsperdaymediansNA, na.rm=TRUE)
stepsmean1
stepsmedian1
medians
hist(stepsperdaymediansNA,  main = "Frequency of the Total number of stepsa day", xlab = "Steps")
hist(stepsperdaymediansNA,  main = "Frequency of the Total number of stepsa day", xlab = "Steps")
hist(stepsperdaymediansNA,  main = "Frequency of the Total number of stepsa day", xlab = "Steps")
setwd("~/RepData_PeerAssessment1")
unz("activity", "activity.csv")
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date, "%Y-%m-%d")
str(activity)
stepsperday<-tapply(activity$steps, activity$date, FUN=sum)
hist(stepsperday,  main = "Frequency of the Total number of stepsa day", xlab = "Steps")
missingdata<- which(is.na(activity$steps))
medians <- rep(median(stepsperday, na.rm=TRUE), times=length(missingdata))
activity[missingdata, "steps"] <- medians
stepsperdaymediansNA<-tapply(activity$steps, activity$date, FUN=sum)
hist(stepsperdaymediansNA,  main = "Frequency of the Total number of stepsa day", xlab = "Steps")
medians <- rep(median(stepsperday, na.rm=TRUE), times=length(missingdata))
medians
missingdata<- which(is.na(activity$steps))
missingdata
missing<-sum(!complete.cases(activity$steps))
missing
setwd("~/RepData_PeerAssessment1")
unz("activity", "activity.csv")
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date, "%Y-%m-%d")
str(activity)
stepsperday<-tapply(activity$steps, activity$date, FUN=sum)
hist(stepsperday,  main = "Frequency of the Total number of stepsa day", xlab = "Steps")
stepsmean <- mean(stepsperday, na.rm=TRUE)
stepsmedian <- median(stepsperday, na.rm=TRUE)
missing<-sum(!complete.cases(activity$steps))
missing
missingdata<- which(is.na(activity$steps))
missingdata
medians <- rep(median(stepsperday, na.rm=TRUE), times=length(missingdata))
medians
activity[missingdata, "steps"] <- medians
head(activity)
stepsperdaymediansNA<-tapply(activity$steps, activity$date, FUN=sum)
hist(stepsperdaymediansNA,  main = "Frequency of the Total number of stepsa day", xlab = "Steps")
missingdata<- which(is.na(activity$steps))
medians <- rep(median(activity$steps, na.rm=TRUE), times=length(missingdata))
activity[missingdata, "steps"] <- medians
stepsperdaymediansNA<-tapply(activity$steps, activity$date, FUN=sum)
hist(stepsperdaymediansNA,  main = "Frequency of the Total number of stepsa day", xlab = "Steps")
setwd("~/RepData_PeerAssessment1")
unz("activity", "activity.csv")
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date, "%Y-%m-%d")
str(activity)
missingdata<- which(is.na(activity$steps))
medians <- rep(median(activity$steps, na.rm=TRUE), times=length(missingdata))
activity[missingdata, "steps"] <- medians
stepsperdaymediansNA<-tapply(activity$steps, activity$date, FUN=sum)
hist(stepsperdaymediansNA,  main = "Frequency of the Total number of stepsa day", xlab = "Steps")
?weekdays
activity1<-dataframe(activity, weekday=weekdays(activity$date)
)
activity1<-data.frame(activity, weekday=weekdays(activity$date))
head(activity1)
activity2< -cbind(activit1, day=ifelse(activity1$weekday == "saturday" | activity1$weekday ==
"sunday", "weekend", "weekday"))"
activity2< -cbind(activit1, day=ifelse(activity1$weekday == "saturday" | activity1$weekday == "sunday", "weekend", "weekday"))
activity2 <- cbind(activit1, day=ifelse(activity1$weekday == "saturday" | activity1$weekday == "sunday", "weekend", "weekday"))
activity2 <- cbind(activit1, day = ifelse(activity1$weekday == "saturday" | activity1$weekday == "sunday", "weekend", "weekday"))
activity2 <- cbind(activity1, day = ifelse(activity1$weekday == "saturday" | activity1$weekday == "sunday", "weekend", "weekday"))
head(activity2)
xyplot(steps ~ interval | day, activity2, type="l", lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
xyplot
?xyplot
??xyplot
library(lattice)
xyplot(steps ~ interval | day, activity2, type="l", lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
activity1 <- data.frame(activity, weekday=weekdays(activity$date))
activity2 <- cbind(activity1, day = ifelse(activity1$weekday == "saturday" |
activity1$weekday == "sunday", "weekend", "weekday"))
library(lattice)
xyplot(steps ~ interval | day, activity2, type="l", lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
activity1
activity2 <- cbind(activity1, day = ifelse(activity1$weekday == "Saturday" |
activity1$weekday == "Sunday", "weekend", "weekday"))
library(lattice)
xyplot(steps ~ interval | day, activity2, type="l", lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
setwd("~/RepData_PeerAssessment1")
unz("activity", "activity.csv")
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date, "%Y-%m-%d")
str(activity)
activity1 <- data.frame(activity, weekday=weekdays(activity$date))
activity2 <- cbind(activity1, day = ifelse(activity1$weekday == "Saturday" |
activity1$weekday == "Sunday", "weekend", "weekday"))
library(lattice)
xyplot(steps ~ interval | day, activity2, type="l", lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
xyplot(steps ~ interval | day, activity2, type="l",
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
meanday <- aggregate(steps ~ interval + day, data = activity, mean)
activity1 <- data.frame(activity, weekday=weekdays(activity$date))
activity2 <- cbind(activity1, day = ifelse(activity1$weekday == "Saturday" |
activity1$weekday == "Sunday", "weekend", "weekday"))
meanday <- aggregate(steps ~ interval + day, data = activity2, mean)
library(lattice)
xyplot(steps ~ interval | day,meanday, type="l",
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
